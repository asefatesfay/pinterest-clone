name: Deploy Go Backend to AWS Lambda with API Gateway

on:
  push:
    paths:
      - 'backend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24.1

      - name: Install dependencies
        run: |
          cd backend
          go mod tidy

      - name: Build Go binary
        run: |
          cd backend
          GOOS=linux GOARCH=amd64 go build -o main main.go

      - name: Verify binary
        run: |
          cd backend
          if [ ! -f main ]; then echo "Error: Binary not found!" && exit 1; fi

      - name: Zip binary
        run: |
          cd backend
          zip main.zip main

      - name: Verify zip file
        run: |
          cd backend
          unzip -l main.zip | grep main || (echo "Error: Binary not in zip file!" && exit 1)

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Update Lambda function
        run: |
          aws lambda update-function-code \
            --function-name go-backend \
            --zip-file fileb://backend/main.zip

      - name: Configure API Gateway
        run: |
          API_ID=$(aws apigateway get-rest-apis --query "items[?name=='go-backend-api'].id" --output text) || true
          if [ -z "$API_ID" ]; then
            API_ID=$(aws apigateway create-rest-api --name "go-backend-api" --query "id" --output text)
          fi
          ROOT_ID=$(aws apigateway get-resources --rest-api-id $API_ID --query "items[?path=='/'].id" --output text)
          RESOURCE_ID=$(aws apigateway create-resource --rest-api-id $API_ID --parent-id $ROOT_ID --path-part "api" --query "id" --output text)
          aws apigateway put-method --rest-api-id $API_ID --resource-id $RESOURCE_ID --http-method GET --authorization-type "NONE"
          aws apigateway put-integration --rest-api-id $API_ID --resource-id $RESOURCE_ID --http-method GET \
            --type AWS_PROXY --integration-http-method POST \
            --uri arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:go-backend/invocations
          aws apigateway create-deployment --rest-api-id $API_ID --stage-name prod
          echo "API Gateway deployed at: https://$API_ID.execute-api.us-west-2.amazonaws.com/prod/api"