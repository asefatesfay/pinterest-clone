name: Deploy Backend to EC2 with Terraform

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Step 3: Initialize Terraform
      - name: Terraform Init
        working-directory: backend/terraform
        run: terraform init

      # Step 4: Apply Terraform to create EC2 instance
      - name: Terraform Apply
        working-directory: backend/terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -auto-approve

      # Step 5: Fetch EC2 Public IP
      - name: Get EC2 Public IP
        id: ec2_ip
        working-directory: backend/terraform
        run: echo "::set-output name=public_ip::$(terraform output -raw ec2_public_ip)"

      # Step 6: Deploy Node.js Application to EC2
      - name: Deploy Node.js Application
        env:
          EC2_PUBLIC_IP: ${{ steps.ec2_ip.outputs.public_ip }}
          SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "Deploying Node.js application to EC2 instance at $EC2_PUBLIC_IP..."
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no -r backend/ ec2-user@$EC2_PUBLIC_IP:/home/ec2-user/
          ssh -o StrictHostKeyChecking=no ec2-user@$EC2_PUBLIC_IP << EOF
            echo "Installing dependencies..."
            cd /home/ec2-user/backend
            npm install
            echo "Starting the application with PM2..."
            pm2 stop all || true
            pm2 start index.js --name pinterest-clone-backend
            pm2 save
            echo "Deployment complete. Application is running on port 3000."
          EOF